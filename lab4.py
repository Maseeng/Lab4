# -*- coding: utf-8 -*-
"""Lab4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16ELAV0slArNxwhB0PW_1j9SVCouALwKV
"""

#Maseeng Masitha 
#Assignment title/ description:
#Exercise1.py to write a function that capitalizes the first and fourth letters of a name
#Edit exercise2.py to produce the output below using string manipulation techniques
#Exercise3.py to write code to extract the latitude and longitude from the URL in exercise3.py 
# Date: 21/02/2020

def old_macdonald (string):
  string = string[0].capitalize() + string[1:3] + string[3].capitalize() + string [4:]
  return string

print (old_macdonald("oldmacdonald"))

#The multi-line string was scraped from the National Weather Service Website.
#Edit this exercise to produce the output below using string manipulation techniques:

#Tonight: Clear, Low: 55 F
#Thursday: Sunny then Chance Showers, High: 77 F
#Friday: Sunny, High: 73 F
#Saturday: Mostly Sunny, High: 77 F
#Sunday: Mostly Sunny, High: 71 F

#Note: Copy the below code in the edit mode to retain the multi-line string formatting. There should be 39 lines of code when pasted in Python IDLE.

# -*- coding: utf-8 -*-
# Keep the line above when running script
# Tells python what encoding the string is stored in

# Scraped multi-line String
forecast = '''

Tonight
ClearLow: 55 F

Thursday
Sunny thenChanceShowersHigh: 77 F

Friday
SunnyHigh: 73 F

Saturday
Mostly SunnyHigh: 77 F

Sunday
Mostly SunnyHigh: 71 F
'''

# Split string into a list
# Use two blank lines (\n\n) as the separator
# Creates a list item at every instance of separator
# Loop through list to make string replacements to each item
# Remove extra whitespaces or lines for a cleaner format

import re
forecast_list = forecast.split('\n\n')

for day in forecast_list:
    day = day.replace('\n',': ')
    glue = ' '
    res = ''.join(glue + x if x.isupper() else x for x in day).strip(glue).split(glue)
    result = ''
    for element in res:
        result += ' '+ str(element)
    print(result)

Tonight: Clear, Low: 55 F
Thursday: Sunny then Chance Showers, High: 77 F
Friday: Sunny, High: 73 F
Saturday: Mostly Sunny, High: 77 F
Sunday: Mostly Sunny, High: 71 F

#working in colab
# Import required libraries
import requests
from bs4 import BeautifulSoup

# Provide the latitude and longitude for the location you would like to check the weather for
# Lat/lon in decimal degrees provided for Worcester, MA
lat = '42.2509428'
lon = '-71.8249939'

# Create url for the requested location through string concatenation
url = 'https://forecast.weather.gov/MapClick.php?lat='+lat+"&lon="+lon
# Check if the URL exists
# print url

# Send request to retrieve the web-page using the get() function from the requests library
# The page variable stores the response from the web-page
page = requests.get(url)

# Create a BeautifulSoup object with the response from the URL
# Access contents of the web-page using .content
# html_parser is used since our page is in HTML format
soup=BeautifulSoup(page.content,"html.parser")

# Locate element on page to be scraped
# This element is located within an id tag called current_conditions-summary
# find() locates the element in the BeautifulSoup object
cur_weather_conditions = soup.find(id="current_conditions_detail")

# Extract text from the selected BeautifulSoup object using .text
cur_weather_conditions = cur_weather_conditions.text

# Final Output
# Return scraped information
print('Latitude:',lat)
print('Longitude:', lon)